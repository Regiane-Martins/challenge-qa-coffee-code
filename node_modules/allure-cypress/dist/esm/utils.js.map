{"version":3,"file":"utils.js","names":["uint8ArrayToBase64","data","u8arrayLike","Array","isArray","buffer","btoa","String","fromCharCode","apply","normalizeAttachmentContentEncoding","encoding","getSuitePath","test","path","currentSuite","parent","title","unshift"],"sources":["../../src/utils.ts"],"sourcesContent":["export const uint8ArrayToBase64 = (data: unknown) => {\n  // @ts-ignore\n  const u8arrayLike = Array.isArray(data) || data.buffer;\n\n  if (!u8arrayLike) {\n    return data as string;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  return btoa(String.fromCharCode.apply(null, data as number[]));\n};\n\nexport const normalizeAttachmentContentEncoding = (data: unknown, encoding: BufferEncoding): BufferEncoding => {\n  // @ts-ignore\n  const u8arrayLike = Array.isArray(data) || data.buffer;\n\n  if (u8arrayLike) {\n    return \"base64\";\n  }\n\n  return encoding;\n};\n\nexport const getSuitePath = (test: Mocha.Test): string[] => {\n  const path: string[] = [];\n  let currentSuite: Mocha.Suite | undefined = test.parent;\n\n  while (currentSuite) {\n    if (currentSuite.title) {\n      path.unshift(currentSuite.title);\n    }\n\n    currentSuite = currentSuite.parent;\n  }\n\n  return path;\n};\n"],"mappings":"AAAA,OAAO,IAAMA,kBAAkB,GAAIC,IAAa,IAAK;EACnD;EACA,IAAMC,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAIA,IAAI,CAACI,MAAM;EAEtD,IAAI,CAACH,WAAW,EAAE;IAChB,OAAOD,IAAI;EACb;;EAEA;EACA,OAAOK,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAER,IAAgB,CAAC,CAAC;AAChE,CAAC;AAED,OAAO,IAAMS,kCAAkC,GAAGA,CAACT,IAAa,EAAEU,QAAwB,KAAqB;EAC7G;EACA,IAAMT,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,IAAIA,IAAI,CAACI,MAAM;EAEtD,IAAIH,WAAW,EAAE;IACf,OAAO,QAAQ;EACjB;EAEA,OAAOS,QAAQ;AACjB,CAAC;AAED,OAAO,IAAMC,YAAY,GAAIC,IAAgB,IAAe;EAC1D,IAAMC,IAAc,GAAG,EAAE;EACzB,IAAIC,YAAqC,GAAGF,IAAI,CAACG,MAAM;EAEvD,OAAOD,YAAY,EAAE;IACnB,IAAIA,YAAY,CAACE,KAAK,EAAE;MACtBH,IAAI,CAACI,OAAO,CAACH,YAAY,CAACE,KAAK,CAAC;IAClC;IAEAF,YAAY,GAAGA,YAAY,CAACC,MAAM;EACpC;EAEA,OAAOF,IAAI;AACb,CAAC","ignoreList":[]}